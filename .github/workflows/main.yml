name: Main

on:
  push:
    branches: ["develop"]
  pull_request:
    branches: ["develop"]
  workflow_dispatch:

permissions:
  contents: write
  id-token: write

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      project1: ${{ steps.changes.outputs.project1 }}
      project2: ${{ steps.changes.outputs.project2 }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            project1:
              - 'project1/**'
            project2:
              - 'project2/**'

  build-project1:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.project1 == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: project1
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.13

      - name: Install packages
        run: |
          yarn install

      - name: semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - name: Save app version
        id: package-version
        run: |
          echo "::set-output name=version::$(node -p "require('./package.json').version")"

      - name: Set output
        run: |
          echo "name=version::$(node -p "require('./package.json').version")" > $GITHUB_VERSION

      - name: version
        env:
          OUTPUT1: ${{ steps.package-version.outputs.version }}
        run: |
          echo "$OUTPUT1 $GITHUB_VERSION"

      - name: Bump the app version
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          npm version patch
          git add --all
          git commit -m "experiment-ui patch version bumped [skip ci]"
          git push

      - name: Build
        run: echo "Project 1 build!"

  build-project2:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.project2 == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Test
        run: echo "Project 2 testes!"

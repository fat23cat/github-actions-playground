name: Main

on:
  push:
    branches: ["develop"]
  pull_request:
    branches: ["develop"]
  workflow_dispatch:

permissions:
  contents: write
  id-token: write

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      project1: ${{ steps.changes.outputs.project1 }}
      project2: ${{ steps.changes.outputs.project2 }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            project1:
              - 'project1/**'
            project2:
              - 'project2/**'

  build-project1:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.project1 == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: project1
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.13

      - name: Install packages
        run: |
          yarn install

      - name: Configure Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Get merged branch name
        id: branch_name_extractor
        run: |
          PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          BRANCH_NAME=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER | jq -r .head.ref)
          echo "::set-output name=branch_name::$BRANCH_NAME"
        # env:
        #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #   GITHUB_EVENT_PATH: ${{ github.event_path }}

      - name: Bump the app version
        run: |
          BRANCH_NAME="${{ steps.branch_name_extractor.outputs.branch_name }}"
          if [[ $BRANCH_NAME == feat/* ]]; then
            VERSION_INCREMENT="minor"
          else
            VERSION_INCREMENT="patch"
          fi

          npm version $VERSION_INCREMENT -m "experiment-ui version bumped to %s [ci skip]"
          git push --no-verify -o ci-skip origin develop
          echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

        # - name: semantic-release
        #   env:
        #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #   run: |
        #     npx semantic-release
        #     echo

      - name: version
        run: |
          echo "${VERSION}"

      - name: Build
        run: echo "Project 1 build!"

  build-project2:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.project2 == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Test
        run: echo "Project 2 testes!"
